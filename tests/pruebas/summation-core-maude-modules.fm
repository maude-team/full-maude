(fmod MY-INT is 
   pr INT .
   op iii : -> Int .
   eq iii = 3 .
  endfm)

(fmod FOO{X :: TRIV} is
   sort Foo{X} .
   op f : X$Elt -> Foo{X} .
   op g : -> Foo{X} .
   eq f(X:X$Elt) = g .
 endfm)

(view iii from TRIV to MY-INT is 
  sort Elt to Int .
 endv)

(red in FOO{iii} : f(iii) .)

(red in FOO{iii} * (op iii to term three) : f(three) .)
(red in FOO{iii} * (op _+_ to _plus_) : f(2 + iii) .)
(red in FOO{iii} * (op _+_ to _plus_) : f(2 plus iii) .)

(view Qid from TRIV to QID is 
   sort Elt to Qid .
 endv)

(fmod BAR is
  pr QID + FOO{Qid} .
 endfm)

(red f('q) .)

(show module .)

(show module FOO{Qid} + Qid .)

(show module FOO{Qid} + QID .)

(show all .)

(fmod BAZ is
  pr QID + FOO{Qid} + BAR .
 endfm)

(red f('q) .)

(show module .)

(show module QID + FOO{Qid} + BAR .)
